// <auto-generated />
using System;
using Atletica_Back_End.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Atletica_Back_End.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20250218184939_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.2");

            modelBuilder.Entity("Atletica_BD.Champion", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("name")
                        .HasColumnType("TEXT");

                    b.Property<string>("urlImage")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Champions");
                });

            modelBuilder.Entity("Atletica_BD.Match", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<double>("duration")
                        .HasColumnType("REAL");

                    b.Property<Guid?>("loserId")
                        .HasColumnType("TEXT");

                    b.Property<int>("totalDamage")
                        .HasColumnType("INTEGER");

                    b.Property<int>("totalGold")
                        .HasColumnType("INTEGER");

                    b.Property<int>("totalKills")
                        .HasColumnType("INTEGER");

                    b.Property<Guid?>("winnerId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("loserId");

                    b.HasIndex("winnerId");

                    b.ToTable("Matchs");
                });

            modelBuilder.Entity("Atletica_BD.Player", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<int>("losses")
                        .HasColumnType("INTEGER");

                    b.Property<string>("nick")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("teamId")
                        .HasColumnType("TEXT");

                    b.Property<int>("teamTotalGold")
                        .HasColumnType("INTEGER");

                    b.Property<int>("teamTotalKill")
                        .HasColumnType("INTEGER");

                    b.Property<int>("totalAssists")
                        .HasColumnType("INTEGER");

                    b.Property<int>("totalDeaths")
                        .HasColumnType("INTEGER");

                    b.Property<int>("totalFirstBlood")
                        .HasColumnType("INTEGER");

                    b.Property<int>("totalGold")
                        .HasColumnType("INTEGER");

                    b.Property<int>("totalKills")
                        .HasColumnType("INTEGER");

                    b.Property<int>("totalMVP")
                        .HasColumnType("INTEGER");

                    b.Property<double>("totalMinutes")
                        .HasColumnType("REAL");

                    b.Property<int>("totalTeamFirstBlood")
                        .HasColumnType("INTEGER");

                    b.Property<int>("totalVisionScore")
                        .HasColumnType("INTEGER");

                    b.Property<int>("wins")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("teamId");

                    b.ToTable("Players");
                });

            modelBuilder.Entity("Atletica_BD.Team", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("imageUrl")
                        .HasColumnType("TEXT");

                    b.Property<int>("losses")
                        .HasColumnType("INTEGER");

                    b.Property<string>("name")
                        .HasColumnType("TEXT");

                    b.Property<int>("totalDamage")
                        .HasColumnType("INTEGER");

                    b.Property<int>("totalDuration")
                        .HasColumnType("INTEGER");

                    b.Property<int>("totalGold")
                        .HasColumnType("INTEGER");

                    b.Property<int>("totalKills")
                        .HasColumnType("INTEGER");

                    b.Property<int>("wins")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Teams");
                });

            modelBuilder.Entity("Atletica_BD.UsedChampion", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("championsId")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("matchId")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("playerId")
                        .HasColumnType("TEXT");

                    b.Property<bool>("win")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("championsId");

                    b.HasIndex("matchId");

                    b.HasIndex("playerId");

                    b.ToTable("UsedChampions");
                });

            modelBuilder.Entity("Atletica_BD.Match", b =>
                {
                    b.HasOne("Atletica_BD.Team", "loser")
                        .WithMany()
                        .HasForeignKey("loserId");

                    b.HasOne("Atletica_BD.Team", "winner")
                        .WithMany()
                        .HasForeignKey("winnerId");

                    b.Navigation("loser");

                    b.Navigation("winner");
                });

            modelBuilder.Entity("Atletica_BD.Player", b =>
                {
                    b.HasOne("Atletica_BD.Team", "team")
                        .WithMany()
                        .HasForeignKey("teamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("team");
                });

            modelBuilder.Entity("Atletica_BD.UsedChampion", b =>
                {
                    b.HasOne("Atletica_BD.Champion", "champions")
                        .WithMany()
                        .HasForeignKey("championsId");

                    b.HasOne("Atletica_BD.Match", "match")
                        .WithMany()
                        .HasForeignKey("matchId");

                    b.HasOne("Atletica_BD.Player", "player")
                        .WithMany()
                        .HasForeignKey("playerId");

                    b.Navigation("champions");

                    b.Navigation("match");

                    b.Navigation("player");
                });
#pragma warning restore 612, 618
        }
    }
}
